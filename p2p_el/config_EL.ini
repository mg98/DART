[DATASET]
dataset_package = decentralizepy.datasets.Tribler
dataset_class = Tribler
model_class = AllRank
train_dir = ../tribler_data/
test_dir = ../tribler_data/
; python list of fractions below
sizes = 
random_seed = 90

[OPTIMIZER_PARAMS]
optimizer_package = torch.optim
optimizer_class = SGD
lr = 0.05

[TRAIN_PARAMS]
training_package = decentralizepy.training.Training
training_class = Training
rounds = 10
full_epochs = False
batch_size = 5
shuffle = True
loss_package = allrank.models.losses
loss_class = neuralNDCG

[COMMUNICATION]
comm_package = decentralizepy.communication.TCP
comm_class = TCP
addresses_filepath = ip.json

[SHARING]
sharing_package = decentralizepy.sharing.PlainAverageSharing
sharing_class = PlainAverageSharing
compression_package = decentralizepy.compression.EliasQuantization
compression_class = EliasQuantization
compress = False
; float_precision = 32767
; step_size = 0.01
; alpha = 0.5

[NODE]
graph_degree = 4